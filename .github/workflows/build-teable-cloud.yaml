name: Build teable cloud

on:
  workflow_dispatch:
  repository_dispatch:
    types: [build-cloud]

jobs:
  build-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: [app, db-migrate]
        include:
          - target: app
            file: Dockerfile
            image: teable-cloud
          - target: db-migrate
            file: Dockerfile.db-migrate
            image: teable-db-migrate-cloud

    steps:
      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          repository: teableio/teable-ee
          token: ${{ secrets.PACKAGES_KEY }}
          submodules: 'true'

      - name: Get teable-ee SHA
        id: get_sha
        run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGES_KEY }}

      - name: Login to Docker Hub registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_NAME }}
          password: ${{ secrets.DOCKER_HUB_AK }}

      - name: Login to Ali container registry
        uses: docker/login-action@v3
        with:
          registry: registry.cn-shenzhen.aliyuncs.com
          username: ${{ secrets.ALI_DOCKER_USERNAME }}
          password: ${{ secrets.ALI_DOCKER_PASSWORD }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20.9.0
      - name: ⚙️ Install zx
        run: npm install -g zx

      - name: ⚙️ Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            registry.cn-shenzhen.aliyuncs.com/teable/${{ matrix.image }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.get_sha.outputs.sha }}

      - name: ⚙️ Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: ⚙️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: 📦 Build and push
        run: |
          zx scripts/build-image.mjs --file=dockers/teable/${{ matrix.file }} \
              --build-arg="ENABLE_CSP=false" \
              --build-arg="NEXT_BUILD_ENV_EDITION=CLOUD" \
              --tag="${{ steps.meta.outputs.tags }}" \
              --platforms="linux/amd64" \
              --push

  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout private repository
      uses: actions/checkout@v4
      with:
        repository: teableio/teable-ee
        token: ${{ secrets.PACKAGES_KEY }}
        submodules: 'true'

    - name: Get teable-ee SHA
      id: get_sha
      run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      
    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
        export KUBECONFIG=./kubeconfig

    - name: Run database migration
      run: |
        kubectl create job --from=cronjob/teable-migration teable-migration-${{ steps.get_sha.outputs.sha }}
        kubectl set image job/teable-migration-${{ steps.get_sha.outputs.sha }} teable=registry.cn-shenzhen.aliyuncs.com/teable/teable-db-migrate-cloud:${{ steps.get_sha.outputs.sha }}
        kubectl wait --for=condition=complete job/teable-migration-${{ steps.get_sha.outputs.sha }} --timeout=600s

    - name: Clean up migration job
      if: always()
      run: kubectl delete job teable-migration-${{ steps.get_sha.outputs.sha }}

    - name: Update application deployment
      run: |
        kubectl set image deployment/teable teable=registry.cn-shenzhen.aliyuncs.com/teable/teable-cloud:${{ steps.get_sha.outputs.sha }}
        kubectl patch deployment teable -p '{"spec":{"template":{"metadata":{"labels":{"restartTime":"'$(date +%Y%m%d%H%M%S)'"}}}}}'
        kubectl rollout status deployment/teable

    - name: Update deployment annotations
      run: |
        kubectl patch deployment teable --type=json -p='[{"op": "replace", "path": "/metadata/annotations/originImageName", "value": "teable/teable-cloud:${{ steps.get_sha.outputs.sha }}"}]'
